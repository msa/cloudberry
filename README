=================================================================
Welcome to Cloudberry
=================================================================
In cloudberry I'm experimenting with ATDD (Acceptance Test Driven
Development) or Story Driven Development for Erlang.

Being a functional language poses a bit of a problem when it
comes to the standard approach of Given When Thens that the BDD
scholars advocate. I can't say that I have it all figured out yet
but I'll keep experimenting with it here for a while to see if I
_can_ figure it out.

My current assumption is that I probably have to provide a story
syntax alternative that passes all arguments and the expected
outcome as a single parameter list to the "step". However, there
are possible work-arounds to get it much closer to the original
BDD-style. I'm just not sure whether it is the right thing to do.
Certainly the language and mind of the customer does not change
with choice of implementing a system in a language without side
effects. On the other hand, the mind of the developer does, and
maybe we need to take that into account. Stay tuned, or better
yet - provide feedback, ideas or other forms of input.

Cheers,
Måns Sandström (mans.sandstrom@adaptiv.se)

=================================================================
FAQ
=================================================================

Can I use it?
- Well, of course you can! But there are still
a few things missing from my initial vision and there are some
rough edges.

How do I build it?
Just 'make' should do it for you.
'make test' will tell you if the code is in any good shape.

Is there any documentation?
- The sourcefiles themselves contains a fair amount of tests and docs.
It should be graspable if you have any experience with Erlang at all.

How do I run it?
Hmm... I'll be sure to write something useful here in a short while...
